# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddItemToCartInput {
  productId: String!
  quantity: Int!
}

type AuthResponseDto {
  token: String!
}

type CartDto {
  cartItems: [CartItemDto!]!
  id: String!
  userId: String!
}

type CartItemDto {
  id: String!
  product: ProductDto!
  productId: String!
  quantity: Int!
}

type CategoryResponse {
  createdAt: DateTime!
  description: String!
  id: ID!
  name: String!
  parent: CategoryResponse
  parentId: String
  subCategories: [CategoryResponse!]!
  updatedAt: DateTime!
}

input CreateCategoryInput {
  description: String!
  name: String!
  parentId: String
}

input CreateProductInput {
  categoryId: String!
  description: String!
  images: [UploadProductImageInput!]!
  name: String!
  price: Float!
  stock: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input IdDto {
  id: String!
}

type LikeDto {
  createdAt: DateTime!
  id: String!
  product: ProductDto!
  productId: String!
  userId: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

type Mutation {
  addImagesToProduct(productIdDto: IdDto!, uploadProductImageInput: [UploadProductImageInput!]!): ProductResponse!
  addItemToCart(addItemToCartInput: AddItemToCartInput!): CartDto!
  createCategory(createCategoryInput: CreateCategoryInput!): CategoryResponse!
  createProduct(createProductInput: CreateProductInput!): ProductResponse!
  deleteCategory(id: String!): Boolean!
  deleteLike(productIdDto: IdDto!): Boolean!
  deleteProduct(productIdDto: IdDto!): ProductResponse!
  likeProduct(productIdDto: IdDto!): LikeDto!
  login(loginUserInput: LoginUserInput!): AuthResponseDto!
  logout: Boolean!
  register(registerUserInput: RegisterUserInput!): UserResponseDto!
  removeCartItem(cartIdDto: IdDto!): Boolean!
  removeImageFromProduct(imageUrlDto: IdDto!, productIdDto: IdDto!): Boolean!
  updateCategory(id: String!, updateCategoryInput: UpdateCategoryInput!): CategoryResponse!
  updateProductDetails(productIdDto: IdDto!, updateProductInput: UpdateProductInput!): ProductResponse!
  updateProductStatus(productIdDto: IdDto!, updateProductStatusdInput: UpdateProductStatusInput!): ProductResponse!
}

type ProductDto {
  categoryId: String!
  createdAt: DateTime!
  description: String!
  id: String!
  images: [String!]
  isDisabled: Boolean!
  lowStockNotified: Boolean!
  name: String!
  price: Float!
  stock: Float!
  updatedAt: DateTime!
}

type ProductImage {
  cloudinaryPublicId: String!
  productId: String!
  url: String!
}

type ProductResponse {
  categoryId: String!
  createdAt: DateTime!
  description: String!
  id: String!
  images: [ProductImage!]
  isDisabled: Boolean!
  lowStockNotified: Boolean!
  name: String!
  price: Float!
  stock: Float!
  updatedAt: DateTime!
}

type Query {
  getCart: CartDto!
  getCategories: [CategoryResponse!]!
  getCategory(id: String!): CategoryResponse!
  getProductById(productIdDto: IdDto!): ProductResponse!
  getUserLikes: [LikeDto!]!

  """Health check for AuthResolver"""
  healthCheck: String!
}

input RegisterUserInput {
  email: String!
  name: String!
  password: String!
}

input UpdateCategoryInput {
  description: String
  name: String
  parentId: String
}

input UpdateProductInput {
  categoryId: String!
  description: String!
  name: String!
  price: Float!
  stock: Float!
}

input UpdateProductStatusInput {
  isDisabled: Boolean!
}

input UploadProductImageInput {
  fileBuffer: String!
}

type UserResponseDto {
  createdAt: DateTime!
  email: String!
  id: ID!
  name: String!
  password: String!
  resetToken: String
  resetTokenExpiry: DateTime
  role: String!
  stripeCustomerId: String
  updatedAt: DateTime!
}