# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddItemToCartInput {
  productId: String!
  quantity: Int!
}

type CartItemModel {
  id: String!
  product: ProductModel!
  productId: String!
  quantity: Int!
}

type CartModel {
  cartItems: [CartItemModel!]!
  id: String!
  userId: String!
}

type CategoryModel {
  createdAt: DateTime!
  description: String!
  id: ID!
  name: String!
  parent: CategoryModel
  parentId: String
  subCategories: [CategoryModel!]!
  updatedAt: DateTime!
}

input CreateCategoryInput {
  description: String!
  name: String!
  parentId: String
}

input CreateProductInput {
  categoryId: String!
  description: String!
  images: [UploadProductImageInput!]!
  name: String!
  price: Float!
  stock: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input GetProductsInput {
  after: String
  before: String
  categoryId: String
  first: Int = 10
}

input IdDto {
  id: String!
}

type ItemConnectionDto {
  edges: [ItemEdgeDto!]!
  pageInfo: PageInfoDto!
}

type ItemEdgeDto {
  cursor: String!
  node: ProductModel!
}

type LikeModel {
  createdAt: DateTime!
  id: String!
  product: ProductModel!
  productId: String!
  userId: String!
}

type Mutation {
  addImagesToProduct(productIdDto: IdDto!, uploadProductImageInput: [UploadProductImageInput!]!): ProductModel!
  addItemToCart(addItemToCartInput: AddItemToCartInput!): CartModel!
  calculateTotal: TotalCart!
  cancelOrder(orderIdDto: IdDto!): OrderModel!
  cancelPayment(paymentIntentIdDto: IdDto!): Boolean!
  createCategory(createCategoryInput: CreateCategoryInput!): CategoryModel!
  createOrder: createOrderResponseDto!
  createProduct(createProductInput: CreateProductInput!): ProductModel!
  deleteCategory(id: String!): Boolean!
  deleteLike(productIdDto: IdDto!): Boolean!
  deleteProduct(productIdDto: IdDto!): Boolean!
  generateNewPaymentIntent(orderIdDto: IdDto!): PaymentIntentModel!
  likeProduct(productIdDto: IdDto!): LikeModel!
  removeCartItem(cartItemIdDto: IdDto!): Boolean!
  removeImageFromProduct(imageUrlDto: IdDto!, productIdDto: IdDto!): Boolean!
  updateCategory(id: String!, updateCategoryInput: UpdateCategoryInput!): CategoryModel!
  updateProductDetails(productIdDto: IdDto!, updateProductInput: UpdateProductInput!): ProductModel!
  updateProductStatus(productIdDto: IdDto!, updateProductStatusdInput: UpdateProductStatusInput!): ProductModel!
}

type OrderItemModel {
  id: String!
  orderId: String!
  product: ProductModel!
  productId: String!
  quantity: Float!
}

type OrderModel {
  createdAt: DateTime!
  id: String!
  orderItems: [OrderItemModel!]!
  orderStatus: OrderStatus!
  payments: [PaymentIntentModel!]!
  total: Float!
  updatedAt: DateTime!
  userId: String!
}

"""OrderStatus"""
enum OrderStatus {
  CANCELED
  COMPLETED
  FAILED
  PENDING
}

type PageInfoDto {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type PaymentIntentModel {
  createdAt: DateTime!
  id: String!
  orderId: String!
  stripeAmount: Float!
  stripeClientSecret: String!
  stripeCurrency: String!
  stripePaymentId: String!
  stripePaymentMethod: String
  stripeStatus: String!
  updatedAt: DateTime!
}

type ProductImageModel {
  cloudinaryPublicId: String!
  id: String!
  productId: String!
  url: String!
}

type ProductModel {
  category: CategoryModel
  categoryId: String!
  createdAt: DateTime!
  description: String!
  id: String!
  images: [ProductImageModel!]
  isDisabled: Boolean!
  lowStockNotified: Boolean!
  name: String!
  price: Float!
  stock: Float!
  updatedAt: DateTime!
}

type Query {
  getCart: CartModel!
  getCategories: [CategoryModel!]!
  getCategory(id: String!): CategoryModel!
  getOrderById(orderIdDto: IdDto!): OrderModel!
  getOrders: [OrderModel!]!
  getProductById(productIdDto: IdDto!): ProductModel!
  getProducts(getProductsInput: GetProductsInput!): ItemConnectionDto!
  getUserLikes: [LikeModel!]!
}

type TotalCart {
  id: String!
  total: Float!
}

input UpdateCategoryInput {
  description: String
  name: String
  parentId: String
}

input UpdateProductInput {
  categoryId: String!
  description: String!
  name: String!
  price: Float!
  stock: Float!
}

input UpdateProductStatusInput {
  isDisabled: Boolean!
}

input UploadProductImageInput {
  fileBuffer: String!
}

type createOrderResponseDto {
  client_secret: String!
  order: OrderModel!
}